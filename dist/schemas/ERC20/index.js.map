{"version":3,"sources":["../../../dist-tsc/schemas/ERC20/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","types_1","ERC20Schema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","address","Address","quantity","Quantity","assetToFields","asset","formatter","title","toString","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Owner","Replaceable","Count","outputs","countOf","View","FunctionOutputKind","assetFromOutputs","balance","assetsOfOwnerByIndex","events","hash"],"mappings":"AAAA;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,aAAR,CAAhB;AACAH,QAAQK,WAAR,GAAsB;AAClBC,aAAS,CADS;AAElBC,qBAAiB,CAFC;AAGlBC,UAAM,OAHY;AAIlBC,iBAAa,yDAJK;AAKlBC,eAAW,mDALO;AAMlBC,aAAS,4CANS;AAOlBC,YAAQ,CACJ,EAAEJ,MAAM,SAAR,EAAmBK,MAAM,SAAzB,EAAoCJ,aAAa,wBAAjD,EADI,EAEJ,EAAED,MAAM,UAAR,EAAoBK,MAAM,SAA1B,EAAqCJ,aAAa,sBAAlD,EAFI,CAPU;AAWlBK,qBAAiB,yBAACF,MAAD;AAAA,eAAa;AAC1BG,qBAASH,OAAOI,OADU;AAE1BC,sBAAUL,OAAOM;AAFS,SAAb;AAAA,KAXC;AAelBC,mBAAe;AAAA,eAAU;AACrBH,qBAASI,MAAML,OADM;AAErBG,sBAAUE,MAAMH;AAFK,SAAV;AAAA,KAfG;AAmBlBI;AAAA,4FAAW,iBAAOD,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6DACA;AACHE,uCAAO,oBAAoBF,MAAML,OAD9B;AAEHN,6CAAa,aAAaW,MAAMH,QAAN,CAAeM,QAAf,EAFvB;AAGHC,qCAAK,EAHF;AAIHd,2CAAW,EAJR;AAKHe,4CAAY;AALT,6BADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAnBkB;AA4BlBC,eAAW;AACPC,kBAAU;AAAA,mBAAU;AAChBd,sBAAMX,KAAK0B,OAAL,CAAaC,QADH;AAEhBrB,sBAAM,cAFU;AAGhBsB,yBAAS,KAHO;AAIhBC,0BAAU,KAJM;AAKhBC,iCAAiB5B,QAAQ6B,eAAR,CAAwBC,UALzB;AAMhBC,wBAAQf,MAAML,OANE;AAOhBqB,wBAAQ,CACJ,EAAEC,MAAMjC,QAAQkC,iBAAR,CAA0BC,KAAlC,EAAyC/B,MAAM,OAA/C,EAAwDK,MAAM,SAA9D,EADI,EAEJ,EAAEwB,MAAMjC,QAAQkC,iBAAR,CAA0BE,WAAlC,EAA+ChC,MAAM,KAArD,EAA4DK,MAAM,SAAlE,EAFI,EAGJ,EAAEwB,MAAMjC,QAAQkC,iBAAR,CAA0BG,KAAlC,EAAyCjC,MAAM,QAA/C,EAAyDK,MAAM,SAA/D,EAA0EZ,OAAOmB,MAAMH,QAAvF,EAHI,CAPQ;AAYhByB,yBAAS;AAZO,aAAV;AAAA,SADH;AAePC,iBAAS;AAAA,mBAAU;AACf9B,sBAAMX,KAAK0B,OAAL,CAAaC,QADJ;AAEfrB,sBAAM,WAFS;AAGfsB,yBAAS,KAHM;AAIfC,0BAAU,IAJK;AAKfC,iCAAiB5B,QAAQ6B,eAAR,CAAwBW,IAL1B;AAMfT,wBAAQf,MAAML,OANC;AAOfqB,wBAAQ,CACJ,EAAEC,MAAMjC,QAAQkC,iBAAR,CAA0BC,KAAlC,EAAyC/B,MAAM,QAA/C,EAAyDK,MAAM,SAA/D,EADI,CAPO;AAUf6B,yBAAS,CACL,EAAEL,MAAMjC,QAAQyC,kBAAR,CAA2BJ,KAAnC,EAA0CjC,MAAM,SAAhD,EAA2DK,MAAM,MAAjE,EADK,CAVM;AAafiC,kCAAkB,0BAACJ,OAAD;AAAA,2BAAaA,QAAQK,OAArB;AAAA;AAbH,aAAV;AAAA,SAfF;AA8BPC,8BAAsB;AA9Bf,KA5BO;AA4DlBC,YAAQ;AACJtB,kBAAU;AADN,KA5DU;AA+DlBuB,UAAM;AAAA,eAAS9B,MAAML,OAAf;AAAA;AA/DY,CAAtB;AAiEA","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../types\");\nexports.ERC20Schema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'ERC20',\n    description: 'Items conforming to the ERC20 spec, using transferFrom.',\n    thumbnail: 'https://opensea.io/static/images/opensea-icon.png',\n    website: 'https://github.com/ethereum/eips/issues/20',\n    fields: [\n        { name: 'Address', type: 'address', description: 'Asset Contract Address' },\n        { name: 'Quantity', type: 'uint256', description: 'Quantity to transfer' },\n    ],\n    assetFromFields: (fields) => ({\n        address: fields.Address,\n        quantity: fields.Quantity,\n    }),\n    assetToFields: asset => ({\n        Address: asset.address,\n        Quantity: asset.quantity,\n    }),\n    formatter: async (asset) => {\n        return {\n            title: 'ERC20 Asset at ' + asset.address,\n            description: 'Trading ' + asset.quantity.toString(),\n            url: '',\n            thumbnail: '',\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transferFrom',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: '_from', type: 'address' },\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Count, name: '_value', type: 'uint256', value: asset.quantity },\n            ],\n            outputs: [],\n        }),\n        countOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'balanceOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: '_owner', type: 'address' },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Count, name: 'balance', type: 'uint' },\n            ],\n            assetFromOutputs: (outputs) => outputs.balance,\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: asset => asset.address,\n};\n//# sourceMappingURL=index.js.map"]}