{"version":3,"sources":["../../../dist-tsc/schemas/ERC20/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","types_1","unit","ERC20Schema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","address","Address","assetToFields","asset","formatter","title","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Owner","Replaceable","Asset","outputs","transferQuantity","quantity","Count","countOf","View","FunctionOutputKind","assetFromOutputs","balance","assetsOfOwnerByIndex","events","hash"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../types\");\nconst unit = '1';\nexports.ERC20Schema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'ERC20',\n    description: 'Items conforming to the ERC20 spec, using transferFrom.',\n    thumbnail: 'https://opensea.io/static/images/opensea-icon.png',\n    website: 'https://github.com/ethereum/eips/issues/20',\n    fields: [\n        { name: 'Address', type: 'address', description: 'Asset Contract Address' },\n    ],\n    assetFromFields: (fields) => ({\n        address: fields.Address,\n    }),\n    assetToFields: asset => ({\n        Address: asset.address,\n    }),\n    formatter: async (asset) => {\n        return {\n            title: 'ERC20 Asset at ' + asset.address,\n            description: '',\n            url: '',\n            thumbnail: '',\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transferFrom',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: '_from', type: 'address' },\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_value', type: 'uint256', value: unit },\n            ],\n            outputs: [],\n        }),\n        transferQuantity: (asset, quantity) => ({\n            type: Web3.AbiType.Function,\n            name: 'transferFrom',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: '_from', type: 'address' },\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Count, name: '_value', type: 'uint256', value: quantity },\n            ],\n            outputs: [],\n        }),\n        countOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'balanceOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: '_owner', type: 'address' },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Count, name: 'balance', type: 'uint' },\n            ],\n            assetFromOutputs: (outputs) => outputs.balance,\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: asset => asset.address,\n};\n//# sourceMappingURL=index.js.map"]}