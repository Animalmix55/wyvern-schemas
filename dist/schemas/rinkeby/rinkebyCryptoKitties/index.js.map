{"version":3,"sources":["../../../../dist-tsc/schemas/rinkeby/rinkebyCryptoKitties/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","types_1","rinkebyCryptoKittiesSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","ID","assetToFields","asset","formatter","title","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Replaceable","Asset","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","Index","assetFromOutputs","output","toNumber","toString","events","Event","anonymous","EventInputKind","Source","indexed","Destination","assetFromInputs","tokenId","hash","a"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.rinkebyCryptoKittiesSchema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'RinkebyCryptoKitties',\n    description: 'Rinkeby Testnet CryptoKitties',\n    thumbnail: 'https://www.cryptokitties.co/images/kitty-eth.svg',\n    website: 'https://cryptokitties.co',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'CryptoKitty number.' },\n    ],\n    assetFromFields: (fields) => fields.ID,\n    assetToFields: asset => ({ ID: asset }),\n    formatter: async (asset) => {\n        return {\n            thumbnail: 'https://www.cryptokitties.co/images/kitty-eth.svg',\n            title: 'RinkebyCryptoKitty #' + asset,\n            description: 'A Rinkeby kitten!',\n            url: 'https://www.cryptokitties.co/kitty/' + asset,\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transfer',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0x16baf0de678e52367adc69fd067e5edd1d33e3bf',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0x16baf0de678e52367adc69fd067e5edd1d33e3bf',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [{\n                type: Web3.AbiType.Function,\n                name: 'tokensOfOwnerByIndex',\n                payable: false,\n                constant: true,\n                stateMutability: types_1.StateMutability.View,\n                target: '0x16baf0de678e52367adc69fd067e5edd1d33e3bf',\n                inputs: [\n                    { kind: types_1.FunctionInputKind.Owner, name: '_owner', type: 'address' },\n                    { kind: types_1.FunctionInputKind.Index, name: '_index', type: 'uint' },\n                ],\n                outputs: [\n                    { kind: types_1.FunctionOutputKind.Asset, name: 'tokenId', type: 'uint' },\n                ],\n                assetFromOutputs: (output) => {\n                    if (output.toNumber() === 0) {\n                        return null;\n                    }\n                    else {\n                        return output.toString();\n                    }\n                },\n            }],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'Transfer',\n                target: '0x16baf0de678e52367adc69fd067e5edd1d33e3bf',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: true, name: 'from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: true, name: 'to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: true, name: 'tokenId', type: 'uint256' },\n                ],\n                assetFromInputs: async (inputs) => inputs.tokenId,\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]}