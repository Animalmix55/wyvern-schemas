{"version":3,"sources":["../../../../dist-tsc/schemas/rinkeby/rinkebyOwnableContract/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","types_1","rinkebyOwnableContractSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","Name","address","Address","formatter","asset","title","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Replaceable","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events","hash","a"],"mappings":"AAAA;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,gBAAR,CAAhB;AACAH,QAAQK,4BAAR,GAAuC;AACnCC,aAAS,CAD0B;AAEnCC,qBAAiB,CAFkB;AAGnCC,UAAM,wBAH6B;AAInCC,iBAAa,gCAJsB;AAKnCC,eAAW,oHALwB;AAMnCC,aAAS,+FAN0B;AAOnCC,YAAQ,CACJ,EAAEJ,MAAM,MAAR,EAAgBK,MAAM,QAAtB,EAAgCJ,aAAa,eAA7C,EADI,EAEJ,EAAED,MAAM,SAAR,EAAmBK,MAAM,SAAzB,EAAoCJ,aAAa,kBAAjD,EAFI,CAP2B;AAWnCK,qBAAiB,yBAACF,MAAD;AAAA,eAAa;AAC1BJ,kBAAMI,OAAOG,IADa;AAE1BC,qBAASJ,OAAOK;AAFU,SAAb;AAAA,KAXkB;AAenCC;AAAA,4FAAW,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6DACA;AACHT,2CAAW,oHADR;AAEHU,uCAAO,wBAAwBD,MAAMX,IAA9B,GAAqC,GAFzC;AAGHC,6CAAa,wBAAwBU,MAAMH,OAHxC;AAIHK,qCAAK,kCAAkCF,MAAMH,OAJ1C;AAKHM,4CAAY;AALT,6BADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAfmC;AAwBnCC,eAAW;AACPC,kBAAU;AAAA,mBAAU;AAChBX,sBAAMX,KAAKuB,OAAL,CAAaC,QADH;AAEhBlB,sBAAM,mBAFU;AAGhBmB,yBAAS,KAHO;AAIhBC,0BAAU,KAJM;AAKhBC,iCAAiBzB,QAAQ0B,eAAR,CAAwBC,UALzB;AAMhBC,wBAAQb,MAAMH,OANE;AAOhBiB,wBAAQ,CACJ,EAAEC,MAAM9B,QAAQ+B,iBAAR,CAA0BC,WAAlC,EAA+C5B,MAAM,UAArD,EAAiEK,MAAM,SAAvE,EADI,CAPQ;AAUhBwB,yBAAS;AAVO,aAAV;AAAA,SADH;AAaPC,iBAAS;AAAA,mBAAU;AACfzB,sBAAMX,KAAKuB,OAAL,CAAaC,QADJ;AAEflB,sBAAM,OAFS;AAGfmB,yBAAS,KAHM;AAIfC,0BAAU,IAJK;AAKfC,iCAAiBzB,QAAQ0B,eAAR,CAAwBS,IAL1B;AAMfP,wBAAQb,MAAMH,OANC;AAOfiB,wBAAQ,EAPO;AAQfI,yBAAS,CACL,EAAEH,MAAM9B,QAAQoC,kBAAR,CAA2BC,KAAnC,EAA0CjC,MAAM,OAAhD,EAAyDK,MAAM,SAA/D,EADK;AARM,aAAV;AAAA,SAbF;AAyBP6B,8BAAsB;AAzBf,KAxBwB;AAmDnCC,YAAQ;AACJnB,kBAAU;AADN,KAnD2B;AAsDnCoB,UAAM;AAAA,eAAKC,EAAE7B,OAAP;AAAA;AAtD6B,CAAvC;AAwDA","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.rinkebyOwnableContractSchema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'RinkebyOwnableContract',\n    description: 'Rinkeby Ownable Smart Contract',\n    thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n    website: 'https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Ownable.sol',\n    fields: [\n        { name: 'Name', type: 'string', description: 'Contract Name' },\n        { name: 'Address', type: 'address', description: 'Contract Address' },\n    ],\n    assetFromFields: (fields) => ({\n        name: fields.Name,\n        address: fields.Address,\n    }),\n    formatter: async (asset) => {\n        return {\n            thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n            title: 'Ownable Contract: \"' + asset.name + '\"',\n            description: 'Ownable at address ' + asset.address,\n            url: 'https://etherscan.io/address/' + asset.address,\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transferOwnership',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: 'newOwner', type: 'address' },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'owner',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: asset.address,\n            inputs: [],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: a => a.address,\n};\n//# sourceMappingURL=index.js.map"]}