{"version":3,"sources":["../../../../dist-tsc/schemas/rinkeby/rinkebyCustom/index.js"],"names":["Object","defineProperty","exports","value","rinkebyCustomSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","Name","Description","Thumbnail","url","URL","transfer","Transfer","formatter","asset","title","properties","functions","assetsOfOwnerByIndex","events","hash","a"],"mappings":"AAAA;;;;;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACAD,QAAQE,mBAAR,GAA8B;AAC1BC,aAAS,CADiB;AAE1BC,qBAAiB,CAFS;AAG1BC,UAAM,eAHoB;AAI1BC,iBAAa,2CAJa;AAK1BC,eAAW,yDALe;AAM1BC,aAAS,iDANiB;AAO1BC,YAAQ,CACJ,EAAEJ,MAAM,MAAR,EAAgBK,MAAM,QAAtB,EAAgCJ,aAAa,eAA7C,EADI,EAEJ,EAAED,MAAM,aAAR,EAAuBK,MAAM,QAA7B,EAAuCJ,aAAa,sBAApD,EAFI,EAGJ,EAAED,MAAM,WAAR,EAAqBK,MAAM,QAA3B,EAAqCJ,aAAa,8BAAlD,EAHI,EAIJ,EAAED,MAAM,KAAR,EAAeK,MAAM,QAArB,EAA+BJ,aAAa,cAA5C,EAJI,EAKJ,EAAED,MAAM,UAAR,EAAoBK,MAAM,KAA1B,EAAiCJ,aAAa,0BAA9C,EALI,CAPkB;AAc1BK,qBAAiB,yBAACF,MAAD;AAAA,eAAa;AAC1BJ,kBAAMI,OAAOG,IADa;AAE1BN,yBAAaG,OAAOI,WAFM;AAG1BN,uBAAWE,OAAOK,SAHQ;AAI1BC,iBAAKN,OAAOO,GAJc;AAK1BC,sBAAUR,OAAOS;AALS,SAAb;AAAA,KAdS;AAqB1BC;AAAA,4FAAW,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6DACA;AACHb,2CAAWa,MAAMb,SADd;AAEHc,uCAAOD,MAAMf,IAFV;AAGHC,6CAAac,MAAMd,WAHhB;AAIHS,qCAAKK,MAAML,GAJR;AAKHO,4CAAY;AALT,6BADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA,OArB0B;AA8B1BC,eAAW;AACPN,kBAAU;AAAA,mBAASG,MAAMH,QAAf;AAAA,SADH;AAEPO,8BAAsB;AAFf,KA9Be;AAkC1BC,YAAQ;AACJR,kBAAU;AADN,KAlCkB;AAqC1BS,UAAM;AAAA,eAAK,yBAAeC,CAAf,CAAL;AAAA;AArCoB,CAA9B;AAuCA","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rinkebyCustomSchema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'RinkebyCustom',\n    description: 'Rinkeby Custom (manual ABI specification)',\n    thumbnail: 'https://d30y9cdsu7xlg0.cloudfront.net/png/45447-200.png',\n    website: 'https://github.com/projectwyvern/wyvern-schemas',\n    fields: [\n        { name: 'Name', type: 'string', description: 'Name of Asset' },\n        { name: 'Description', type: 'string', description: 'Description of Asset' },\n        { name: 'Thumbnail', type: 'string', description: 'URL of asset thumbnail image' },\n        { name: 'URL', type: 'string', description: 'URL of asset' },\n        { name: 'Transfer', type: 'abi', description: 'ABI of transfer function' },\n    ],\n    assetFromFields: (fields) => ({\n        name: fields.Name,\n        description: fields.Description,\n        thumbnail: fields.Thumbnail,\n        url: fields.URL,\n        transfer: fields.Transfer,\n    }),\n    formatter: async (asset) => {\n        return {\n            thumbnail: asset.thumbnail,\n            title: asset.name,\n            description: asset.description,\n            url: asset.url,\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => asset.transfer,\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: a => JSON.stringify(a),\n};\n//# sourceMappingURL=index.js.map"]}