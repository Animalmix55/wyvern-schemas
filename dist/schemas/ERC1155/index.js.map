{"version":3,"sources":["../../../dist-tsc/schemas/ERC1155/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","types_1","ERC1155Schema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","id","ID","address","Address","quantity","Quantity","assetToFields","asset","formatter","title","toString","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Owner","Replaceable","Asset","Count","outputs","countOf","View","FunctionOutputKind","assetFromOutputs","balance","assetsOfOwnerByIndex","events","hash"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../types\");\nexports.ERC1155Schema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'ERC1155',\n    description: 'Items conforming to the ERC1155 spec, using transferFrom.',\n    thumbnail: 'https://opensea.io/static/images/opensea-icon.png',\n    website: 'https://github.com/ethereum/eips/issues/1155',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'Asset Token ID' },\n        { name: 'Address', type: 'address', description: 'Asset Contract Address' },\n        { name: 'Quantity', type: 'uint256', description: 'Quantity to transfer' },\n    ],\n    assetFromFields: (fields) => ({\n        id: fields.ID,\n        address: fields.Address,\n        quantity: fields.Quantity,\n    }),\n    assetToFields: asset => ({\n        ID: asset.id,\n        Address: asset.address,\n        Quantity: asset.quantity,\n    }),\n    formatter: async (asset) => {\n        return {\n            title: 'ERC1155 Asset: Token ID ' + asset.id + ' at ' + asset.address,\n            description: 'Trading ' + asset.quantity.toString(),\n            url: '',\n            thumbnail: '',\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transferFrom',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: '_from', type: 'address' },\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_id', type: 'uint256', value: asset.id },\n                { kind: types_1.FunctionInputKind.Count, name: '_value', type: 'uint256', value: asset.quantity },\n            ],\n            outputs: [],\n        }),\n        countOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'balanceOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: '_owner', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_id', type: 'uint256', value: asset.id },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Count, name: 'balance', type: 'uint' },\n            ],\n            assetFromOutputs: (outputs) => outputs.balance,\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: asset => asset.address + '-' + asset.id,\n};\n//# sourceMappingURL=index.js.map"]}