{"version":3,"sources":["../../../../dist-tsc/schemas/main/CryptoMasterpieces/index.js"],"names":["Object","defineProperty","exports","value","typed_promisify_1","require","Web3","types_1","CryptoMasterpiecesSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","ID","assetToFields","asset","formatter","web3","abi","contract","eth","at","promisify","call","data","artist","title","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Replaceable","Asset","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events","Event","anonymous","EventInputKind","Source","indexed","Destination","assetFromInputs","tokenId","hash","a"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst typed_promisify_1 = require(\"typed-promisify\");\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.CryptoMasterpiecesSchema = {\n    version: 1,\n    deploymentBlock: 5096088,\n    name: 'CryptoMasterpieces',\n    description: 'Own a Digital Masterpiece on the Blockchain',\n    thumbnail: 'https://www.cryptomasterpieces.com/static/img/top-section.jpg',\n    website: 'https://www.cryptomasterpieces.com/',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'CryptoMasterpiece number.' },\n    ],\n    assetFromFields: (fields) => fields.ID,\n    assetToFields: asset => ({ ID: asset }),\n    formatter: async (asset, web3) => {\n        const abi = { 'constant': true, 'inputs': [{ 'name': '_tokenId', 'type': 'uint256' }], 'name': 'getMasterpiece', 'outputs': [{ 'name': 'name', 'type': 'string' }, { 'name': 'artist', 'type': 'string' }, { 'name': 'birthTime', 'type': 'uint256' }, { 'name': 'snatchWindow', 'type': 'uint256' }, { 'name': 'sellingPrice', 'type': 'uint256' }, { 'name': 'owner', 'type': 'address' }], 'payable': false, 'stateMutability': 'view', 'type': 'function' };\n        const contract = web3.eth.contract([abi]).at('0xa92e3ab42c195e52c9fbf129be47ecbb03845dfd');\n        const data = await typed_promisify_1.promisify(contract[abi.name].call)(asset);\n        const name = data[0];\n        const artist = data[1];\n        return {\n            thumbnail: 'https://s3.amazonaws.com/cryptomasterpieces/masterpiece-images/' + asset + '.jpg',\n            title: 'CryptoMasterpiece #' + asset + ' - ' + name,\n            description: name + ' by ' + artist,\n            url: 'https://cryptomasterpieces.com/masterpiece/' + asset,\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transfer',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0xa92e3ab42c195e52c9fbf129be47ecbb03845dfd',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0xa92e3ab42c195e52c9fbf129be47ecbb03845dfd',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: '_owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'TransferToken',\n                target: '0xa92e3ab42c195e52c9fbf129be47ecbb03845dfd',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: false, name: 'from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: false, name: 'to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: false, name: 'tokenId', type: 'uint256' },\n                ],\n                assetFromInputs: async (inputs) => inputs.tokenId,\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]}