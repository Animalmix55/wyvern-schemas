{"version":3,"sources":["../../../../dist-tsc/schemas/main/CryptoBots/index.js"],"names":["Object","defineProperty","exports","value","axios_1","require","Web3","types_1","CryptoBotsSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","ID","assetToFields","asset","formatter","default","post","ids","catch","err","response","status","data","items","title","url","properties","info","genes","generation","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Replaceable","Asset","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events","Event","anonymous","EventInputKind","Source","indexed","Destination","assetFromInputs","tokenId","hash","a"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst axios_1 = require(\"axios\");\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.CryptoBotsSchema = {\n    version: 1,\n    deploymentBlock: 4819345,\n    name: 'CryptoBots',\n    description: 'A blockchain-based game to find out whose bot army is the best!',\n    thumbnail: 'https://cryptobots.me/static/media/banner.38d05abc.svg',\n    website: 'https://cryptobots.me/',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'CryptoBot number.' },\n    ],\n    assetFromFields: (fields) => fields.ID,\n    assetToFields: asset => ({ ID: asset }),\n    formatter: async (asset) => {\n        const response = await axios_1.default.post(`https://cryptobots.me/api/bot/search`, { ids: [asset] }).catch(err => {\n            if (err.response && (err.response.status === 404 || err.response.status === 400)) {\n                return null;\n            }\n            else {\n                throw err;\n            }\n        });\n        if (response === null || !response.data.items[0]) {\n            return {\n                thumbnail: 'https://cryptobots.me/static/media/banner.38d05abc.svg',\n                title: 'CryptoBot #' + asset,\n                description: '',\n                url: 'https://cryptobots.me/bot/' + asset,\n                properties: [],\n            };\n        }\n        else {\n            const data = response.data.items[0];\n            return {\n                thumbnail: 'https://cryptobots.me/img/' + data.info.genes,\n                title: 'CryptoBot #' + asset,\n                description: 'Generation: ' + data.info.generation,\n                url: 'https://cryptobots.me/bot/' + asset,\n                properties: [],\n            };\n        }\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transfer',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0xf7a6e15dfd5cdd9ef12711bd757a9b6021abf643',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0xf7a6e15dfd5cdd9ef12711bd757a9b6021abf643',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'Transfer',\n                target: '0xf7a6e15dfd5cdd9ef12711bd757a9b6021abf643',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: false, name: 'from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: false, name: 'to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: false, name: 'tokenId', type: 'uint256' },\n                ],\n                assetFromInputs: async (inputs) => inputs.tokenId,\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]}