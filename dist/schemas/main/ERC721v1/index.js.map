{"version":3,"sources":["../../../../dist-tsc/schemas/main/ERC721v1/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","types_1","ECR721v1Schema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","id","ID","address","Address","assetToFields","asset","formatter","title","properties","functions","transferFrom","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Owner","Replaceable","Asset","outputs","ownerOf","View","FunctionOutputKind","assetsOfOwnerByIndex","events","transfer","Event","anonymous","EventInputKind","Source","indexed","Destination","assetFromInputs","tokenId","hash","a"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.ECR721v1Schema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'ECR721v1',\n    description: 'Items conforming to the ERC721 v1 spec, using transferFrom.',\n    thumbnail: 'https://www.cryptokitties.co/images/kitty-eth.svg',\n    website: 'http://erc721.org/',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'Asset Token ID' },\n        { name: 'Address', type: 'address', description: 'Asset Contract Address' },\n    ],\n    assetFromFields: (fields) => ({\n        id: fields.ID,\n        address: fields.Address,\n    }),\n    assetToFields: asset => ({\n        ID: asset.id,\n        Address: asset.address,\n    }),\n    formatter: async (asset) => {\n        return {\n            title: 'ECR721v1 Asset: Token ID ' + asset.id + ' at ' + asset.address,\n            properties: [],\n        };\n    },\n    functions: {\n        transferFrom: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transferFrom',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: '_from', type: 'address' },\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset.id },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset.id },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: asset => ([{\n                type: Web3.AbiType.Event,\n                name: 'Transfer',\n                target: asset.address,\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: false, name: 'from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: false, name: 'to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: false, name: 'tokenId', type: 'uint256' },\n                ],\n                assetFromInputs: async (inputs) => ({ address: asset.address, id: asset.tokenId }),\n            }]),\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]}