{"version":3,"sources":["../../../../dist-tsc/schemas/main/OwnableContract/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","types_1","OwnableContractSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","Name","address","Address","Description","formatter","asset","title","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Replaceable","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events","hash","a"],"mappings":"AAAA;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,gBAAR,CAAhB;AACAH,QAAQK,qBAAR,GAAgC;AAC5BC,aAAS,CADmB;AAE5BC,qBAAiB,CAFW;AAG5BC,UAAM,sBAHsB;AAI5BC,iBAAa,8CAJe;AAK5BC,eAAW,oHALiB;AAM5BC,aAAS,+FANmB;AAO5BC,YAAQ,CACJ,EAAEJ,MAAM,MAAR,EAAgBK,MAAM,QAAtB,EAAgCJ,aAAa,eAA7C,EADI,EAEJ,EAAED,MAAM,aAAR,EAAuBK,MAAM,QAA7B,EAAuCJ,aAAa,sBAApD,EAFI,EAGJ,EAAED,MAAM,SAAR,EAAmBK,MAAM,SAAzB,EAAoCJ,aAAa,kBAAjD,EAHI,CAPoB;AAY5BK,qBAAiB,yBAACF,MAAD;AAAA,eAAa;AAC1BJ,kBAAMI,OAAOG,IADa;AAE1BC,qBAASJ,OAAOK,OAFU;AAG1BR,yBAAaG,OAAOM;AAHM,SAAb;AAAA,KAZW;AAiB5BC;AAAA,4FAAW,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6DACA;AACHV,2CAAW,oHADR;AAEHW,uCAAO,sBAAsBD,MAAMZ,IAA5B,GAAmC,GAFvC;AAGHC,6CAAaW,MAAMX,WAAN,IAAsB,+BAA+BW,MAAMJ,OAHrE;AAIHM,qCAAK,kCAAkCF,MAAMJ,OAJ1C;AAKHO,4CAAY;AALT,6BADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAjB4B;AA0B5BC,eAAW;AACPC,kBAAU;AAAA,mBAAU;AAChBZ,sBAAMX,KAAKwB,OAAL,CAAaC,QADH;AAEhBnB,sBAAM,mBAFU;AAGhBoB,yBAAS,KAHO;AAIhBC,0BAAU,KAJM;AAKhBC,iCAAiB1B,QAAQ2B,eAAR,CAAwBC,UALzB;AAMhBC,wBAAQb,MAAMJ,OANE;AAOhBkB,wBAAQ,CACJ,EAAEC,MAAM/B,QAAQgC,iBAAR,CAA0BC,WAAlC,EAA+C7B,MAAM,UAArD,EAAiEK,MAAM,SAAvE,EADI,CAPQ;AAUhByB,yBAAS;AAVO,aAAV;AAAA,SADH;AAaPC,iBAAS;AAAA,mBAAU;AACf1B,sBAAMX,KAAKwB,OAAL,CAAaC,QADJ;AAEfnB,sBAAM,OAFS;AAGfoB,yBAAS,KAHM;AAIfC,0BAAU,IAJK;AAKfC,iCAAiB1B,QAAQ2B,eAAR,CAAwBS,IAL1B;AAMfP,wBAAQb,MAAMJ,OANC;AAOfkB,wBAAQ,EAPO;AAQfI,yBAAS,CACL,EAAEH,MAAM/B,QAAQqC,kBAAR,CAA2BC,KAAnC,EAA0ClC,MAAM,OAAhD,EAAyDK,MAAM,SAA/D,EADK;AARM,aAAV;AAAA,SAbF;AAyBP8B,8BAAsB;AAzBf,KA1BiB;AAqD5BC,YAAQ;AACJnB,kBAAU;AADN,KArDoB;AAwD5BoB,UAAM;AAAA,eAAKC,EAAE9B,OAAP;AAAA;AAxDsB,CAAhC;AA0DA","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.OwnableContractSchema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'OwnableSmartContract',\n    description: 'Smart contract with transferrable ownership.',\n    thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n    website: 'https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Ownable.sol',\n    fields: [\n        { name: 'Name', type: 'string', description: 'Contract Name' },\n        { name: 'Description', type: 'string', description: 'Contract Description' },\n        { name: 'Address', type: 'address', description: 'Contract Address' },\n    ],\n    assetFromFields: (fields) => ({\n        name: fields.Name,\n        address: fields.Address,\n        description: fields.Description,\n    }),\n    formatter: async (asset) => {\n        return {\n            thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n            title: 'Smart Contract: \"' + asset.name + '\"',\n            description: asset.description || ('Ownable smart contract at ' + asset.address),\n            url: 'https://etherscan.io/address/' + asset.address,\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transferOwnership',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: 'newOwner', type: 'address' },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'owner',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: asset.address,\n            inputs: [],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: a => a.address,\n};\n//# sourceMappingURL=index.js.map"]}