{"version":3,"sources":["../../../../dist-tsc/schemas/main/CryptoKitties/index.js"],"names":["Object","defineProperty","exports","value","axios_1","require","Web3","types_1","CryptoKittiesSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","ID","assetToFields","asset","formatter","default","get","catch","err","response","status","title","url","properties","data","attrs","enhanced_cattributes","cattributes","image_url_cdn","bio","map","c","key","kind","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","FunctionInputKind","Replaceable","Asset","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events","Event","anonymous","EventInputKind","Source","indexed","Destination","assetFromInputs","tokenId","hash","a"],"mappings":"AAAA;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,UAAUC,QAAQ,OAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,UAAUF,QAAQ,gBAAR,CAAhB;AACAH,QAAQM,mBAAR,GAA8B;AAC1BC,aAAS,CADiB;AAE1BC,qBAAiB,OAFS;AAG1BC,UAAM,eAHoB;AAI1BC,iBAAa,6CAJa;AAK1BC,eAAW,mDALe;AAM1BC,aAAS,0BANiB;AAO1BC,YAAQ,CACJ,EAAEJ,MAAM,IAAR,EAAcK,MAAM,SAApB,EAA+BJ,aAAa,qBAA5C,EADI,CAPkB;AAU1BK,qBAAiB,yBAACF,MAAD;AAAA,eAAYA,OAAOG,EAAnB;AAAA,KAVS;AAW1BC,mBAAe;AAAA,eAAU,EAAED,IAAIE,KAAN,EAAV;AAAA,KAXW;AAY1BC;AAAA,4FAAW,iBAAOD,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACgBhB,QAAQkB,OAAR,CAAgBC,GAAhB,2CAA4DH,KAA5D,EAAqEI,KAArE,CAA2E,eAAO;AACrG,oCAAIC,IAAIC,QAAJ,KAAiBD,IAAIC,QAAJ,CAAaC,MAAb,KAAwB,GAAxB,IAA+BF,IAAIC,QAAJ,CAAaC,MAAb,KAAwB,GAAxE,CAAJ,EAAkF;AAC9E,2CAAO,IAAP;AACH,iCAFD,MAGK;AACD,0CAAMF,GAAN;AACH;AACJ,6BAPsB,CADhB;;AAAA;AACDC,oCADC;;AAAA,kCASHA,aAAa,IATV;AAAA;AAAA;AAAA;;AAAA,6DAUI;AACHb,2CAAW,mDADR;AAEHe,uCAAO,kBAAkBR,KAFtB;AAGHR,6CAAa,EAHV;AAIHiB,qCAAK,wCAAwCT,KAJ1C;AAKHU,4CAAY;AALT,6BAVJ;;AAAA;AAmBGC,gCAnBH,GAmBUL,SAASK,IAnBnB;AAoBGC,iCApBH,GAoBWD,KAAKE,oBAAL,IAA6BF,KAAKG,WAAlC,IAAiD,EApB5D;AAAA,6DAqBI;AACHrB,2CAAWkB,KAAKI,aADb;AAEHP,uCAAO,kBAAkBR,KAFtB;AAGHR,6CAAamB,KAAKK,GAHf;AAIHP,qCAAK,wCAAwCT,KAJ1C;AAKHU,4CAAYE,MAAMK,GAAN,CAAU,UAACC,CAAD;AAAA,2CAAQ;AAC1BC,6CAAKD,EAAEtB,IADmB;AAE1BwB,8CAAM,QAFoB;AAG1BrC,+CAAOmC,EAAE1B;AAHiB,qCAAR;AAAA,iCAAV;AALT,6BArBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAZ0B;AA8C1B6B,eAAW;AACPC,kBAAU;AAAA,mBAAU;AAChB1B,sBAAMV,KAAKqC,OAAL,CAAaC,QADH;AAEhBjC,sBAAM,UAFU;AAGhBkC,yBAAS,KAHO;AAIhBC,0BAAU,KAJM;AAKhBC,iCAAiBxC,QAAQyC,eAAR,CAAwBC,UALzB;AAMhBC,wBAAQ,4CANQ;AAOhBC,wBAAQ,CACJ,EAAEX,MAAMjC,QAAQ6C,iBAAR,CAA0BC,WAAlC,EAA+C1C,MAAM,KAArD,EAA4DK,MAAM,SAAlE,EADI,EAEJ,EAAEwB,MAAMjC,QAAQ6C,iBAAR,CAA0BE,KAAlC,EAAyC3C,MAAM,UAA/C,EAA2DK,MAAM,SAAjE,EAA4Eb,OAAOiB,KAAnF,EAFI,CAPQ;AAWhBmC,yBAAS;AAXO,aAAV;AAAA,SADH;AAcPC,iBAAS;AAAA,mBAAU;AACfxC,sBAAMV,KAAKqC,OAAL,CAAaC,QADJ;AAEfjC,sBAAM,SAFS;AAGfkC,yBAAS,KAHM;AAIfC,0BAAU,IAJK;AAKfC,iCAAiBxC,QAAQyC,eAAR,CAAwBS,IAL1B;AAMfP,wBAAQ,4CANO;AAOfC,wBAAQ,CACJ,EAAEX,MAAMjC,QAAQ6C,iBAAR,CAA0BE,KAAlC,EAAyC3C,MAAM,UAA/C,EAA2DK,MAAM,SAAjE,EAA4Eb,OAAOiB,KAAnF,EADI,CAPO;AAUfmC,yBAAS,CACL,EAAEf,MAAMjC,QAAQmD,kBAAR,CAA2BC,KAAnC,EAA0ChD,MAAM,OAAhD,EAAyDK,MAAM,SAA/D,EADK;AAVM,aAAV;AAAA,SAdF;AA4BP4C,8BAAsB;AA5Bf,KA9Ce;AA4E1BC,YAAQ;AACJnB,kBAAU,CAAC;AACH1B,kBAAMV,KAAKqC,OAAL,CAAamB,KADhB;AAEHnD,kBAAM,UAFH;AAGHuC,oBAAQ,4CAHL;AAIHa,uBAAW,KAJR;AAKHZ,oBAAQ,CACJ,EAAEX,MAAMjC,QAAQyD,cAAR,CAAuBC,MAA/B,EAAuCC,SAAS,KAAhD,EAAuDvD,MAAM,MAA7D,EAAqEK,MAAM,SAA3E,EADI,EAEJ,EAAEwB,MAAMjC,QAAQyD,cAAR,CAAuBG,WAA/B,EAA4CD,SAAS,KAArD,EAA4DvD,MAAM,IAAlE,EAAwEK,MAAM,SAA9E,EAFI,EAGJ,EAAEwB,MAAMjC,QAAQyD,cAAR,CAAuBV,KAA/B,EAAsCY,SAAS,KAA/C,EAAsDvD,MAAM,SAA5D,EAAuEK,MAAM,SAA7E,EAHI,CALL;AAUHoD;AAAA,qGAAiB,kBAAOjB,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA,sEAAkBA,OAAOkB,OAAzB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAVG,SAAD;AADN,KA5EkB;AA0F1BC,UAAM;AAAA,eAAKC,CAAL;AAAA;AA1FoB,CAA9B;AA4FA","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst axios_1 = require(\"axios\");\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.CryptoKittiesSchema = {\n    version: 1,\n    deploymentBlock: 4605167,\n    name: 'CryptoKitties',\n    description: 'The virtual kitties that started the craze.',\n    thumbnail: 'https://www.cryptokitties.co/images/kitty-eth.svg',\n    website: 'https://cryptokitties.co',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'CryptoKitty number.' },\n    ],\n    assetFromFields: (fields) => fields.ID,\n    assetToFields: asset => ({ ID: asset }),\n    formatter: async (asset) => {\n        const response = await axios_1.default.get(`https://api.cryptokitties.co/kitties/${asset}`).catch(err => {\n            if (err.response && (err.response.status === 404 || err.response.status === 400)) {\n                return null;\n            }\n            else {\n                throw err;\n            }\n        });\n        if (response === null) {\n            return {\n                thumbnail: 'https://www.cryptokitties.co/images/kitty-eth.svg',\n                title: 'CryptoKitty #' + asset,\n                description: '',\n                url: 'https://www.cryptokitties.co/kitty/' + asset,\n                properties: [],\n            };\n        }\n        else {\n            const data = response.data;\n            const attrs = data.enhanced_cattributes || data.cattributes || [];\n            return {\n                thumbnail: data.image_url_cdn,\n                title: 'CryptoKitty #' + asset,\n                description: data.bio,\n                url: 'https://www.cryptokitties.co/kitty/' + asset,\n                properties: attrs.map((c) => ({\n                    key: c.type,\n                    kind: 'string',\n                    value: c.description,\n                })),\n            };\n        }\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transfer',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'Transfer',\n                target: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: false, name: 'from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: false, name: 'to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: false, name: 'tokenId', type: 'uint256' },\n                ],\n                assetFromInputs: async (inputs) => inputs.tokenId,\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]}