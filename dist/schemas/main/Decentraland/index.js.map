{"version":3,"sources":["../../../../dist-tsc/schemas/main/Decentraland/index.js"],"names":["Object","defineProperty","exports","value","axios_1","require","typed_promisify_1","Web3","types_1","DecentralandSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","x","X","y","Y","assetToFields","asset","formatter","default","get","districtResponse","districts","data","assetResponse","assetData","district","district_id","filter","d","id","title","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Asset","Replaceable","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events","Event","anonymous","EventInputKind","Source","indexed","Destination","Other","assetFromInputs","web3","decodeABI","contract","eth","at","promisify","decodeTokenId","call","assetId","res","toString","hash","a"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst axios_1 = require(\"axios\");\nconst typed_promisify_1 = require(\"typed-promisify\");\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.DecentralandSchema = {\n    version: 1,\n    deploymentBlock: 4944642,\n    name: 'Decentraland',\n    description: 'A virtual world that runs on open standards.',\n    thumbnail: 'https://decentraland.org/images/logo-65f7b27caf.png',\n    website: 'https://decentraland.org/',\n    fields: [\n        { name: 'X', type: 'int', description: 'Parcel x-coordinate' },\n        { name: 'Y', type: 'int', description: 'Parcel y-coordinate' },\n    ],\n    assetFromFields: (fields) => ({ x: fields.X, y: fields.Y }),\n    assetToFields: asset => ({ X: asset.x, Y: asset.y }),\n    formatter: async (asset) => {\n        const districtResponse = await axios_1.default.get(`https://api.land.decentraland.org/api/districts`);\n        const districts = districtResponse.data.data;\n        const assetResponse = await axios_1.default.get(`https://api.land.decentraland.org/api/parcels?nw=${asset.x},${asset.y}&se=${asset.x},${asset.y}`);\n        const assetData = assetResponse.data.data[0];\n        let district = 'None';\n        if (assetData.district_id !== null) {\n            district = districts.filter((d) => d.id === assetData.district_id)[0].name;\n        }\n        return {\n            thumbnail: 'https://decentraland.org/images/logo-65f7b27caf.png',\n            title: 'Decentraland Parcel at ' + asset.x + ',' + asset.y,\n            description: 'District: ' + district,\n            url: 'https://land.decentraland.org/' + asset.x + '/' + asset.y,\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transferLand',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: 'x', type: 'int256', value: asset.x },\n                { kind: types_1.FunctionInputKind.Asset, name: 'y', type: 'int256', value: asset.y },\n                { kind: types_1.FunctionInputKind.Replaceable, name: 'to', type: 'address' },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOfLand',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: 'x', type: 'int256', value: asset.x },\n                { kind: types_1.FunctionInputKind.Asset, name: 'y', type: 'int256', value: asset.y },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: '', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'Transfer',\n                target: '0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: true, name: 'from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: true, name: 'to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: true, name: 'assetId', type: 'uint256' },\n                    { kind: types_1.EventInputKind.Other, indexed: false, name: 'operator', type: 'address' },\n                    { kind: types_1.EventInputKind.Other, indexed: false, name: 'userData', type: 'bytes' },\n                    { kind: types_1.EventInputKind.Other, indexed: false, name: 'operatorData', type: 'bytes' },\n                ],\n                assetFromInputs: async (inputs, web3) => {\n                    const decodeABI = { 'constant': true, 'inputs': [{ 'name': 'value', 'type': 'uint256' }], 'name': 'decodeTokenId', 'outputs': [{ 'name': '', 'type': 'int256' }, { 'name': '', 'type': 'int256' }], 'payable': false, 'stateMutability': 'view', 'type': 'function' };\n                    const contract = web3.eth.contract([decodeABI]).at('0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d');\n                    const res = await typed_promisify_1.promisify(contract.decodeTokenId.call)(inputs.assetId);\n                    return {\n                        x: res[0].toString(),\n                        y: res[1].toString(),\n                    };\n                },\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]}