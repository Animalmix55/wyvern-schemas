{"version":3,"sources":["../../../../dist-tsc/schemas/main/ENSName/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","ens_1","types_1","ENSNameSchema","ENSNameBaseSchema","version","deploymentBlock","name","description","thumbnail","website","formatter","asset","title","nodeHash","slice","url","properties","functions","transfer","type","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Asset","Replaceable","outputs","ownerOf","View","nameHash","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events"],"mappings":"AAAA;;;;;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,QAAQD,QAAQ,qBAAR,CAAd;AACA,IAAME,UAAUF,QAAQ,gBAAR,CAAhB;AACAH,QAAQM,aAAR,GAAwB,sBAAc,EAAd,EAAkBF,MAAMG,iBAAxB,EAA2C,EAAEC,SAAS,CAAX,EAAcC,iBAAiB,OAA/B,EAAwCC,MAAM,SAA9C,EAAyDC,aAAa,sCAAtE,EAA8GC,WAAW,iCAAzH,EAA4JC,SAAS,8DAArK,EAAqOC;AAAA,4FAAW,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6DACpS;AACHH,2CAAW,iCADR;AAEHI,uCAAO,eACFD,MAAML,IAAN,GAAaK,MAAML,IAAnB,GAA0BK,MAAME,QAAN,CAAeC,KAAf,CAAqB,CAArB,EAAwB,CAAxB,IAA6B,KADrD,CAFJ;AAIHP,6CAAa,cAAcI,MAAME,QAJ9B;AAKHE,qCAAK,sCAAsCJ,MAAML,IAL9C;AAMHU,4CAAY;AANT,6BADoS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAArO,EAS5DC,WAAW;AACVC,kBAAU;AAAA,mBAAU;AAChBC,sBAAMrB,KAAKsB,OAAL,CAAaC,QADH;AAEhBf,sBAAM,UAFU;AAGhBgB,yBAAS,KAHO;AAIhBC,0BAAU,KAJM;AAKhBC,iCAAiBvB,QAAQwB,eAAR,CAAwBC,UALzB;AAMhBC,wBAAQ,4CANQ;AAOhBC,wBAAQ,CACJ;AACIC,0BAAM5B,QAAQ6B,iBAAR,CAA0BC,KADpC;AAEIzB,0BAAM,OAFV;AAGIa,0BAAM,SAHV;AAIItB,2BAAOc,MAAME;AAJjB,iBADI,EAOJ;AACIgB,0BAAM5B,QAAQ6B,iBAAR,CAA0BE,WADpC;AAEI1B,0BAAM,UAFV;AAGIa,0BAAM;AAHV,iBAPI,CAPQ;AAoBhBc,yBAAS;AApBO,aAAV;AAAA,SADA;AAuBVC,iBAAS;AAAA,mBAAU;AACff,sBAAMrB,KAAKsB,OAAL,CAAaC,QADJ;AAEff,sBAAM,OAFS;AAGfgB,yBAAS,KAHM;AAIfC,0BAAU,IAJK;AAKfC,iCAAiBvB,QAAQwB,eAAR,CAAwBU,IAL1B;AAMfR,wBAAQ,4CANO;AAOfC,wBAAQ,CACJ;AACIC,0BAAM5B,QAAQ6B,iBAAR,CAA0BC,KADpC;AAEIzB,0BAAM,MAFV;AAGIa,0BAAM,SAHV;AAIItB,2BAAOc,MAAMyB;AAJjB,iBADI,CAPO;AAefH,yBAAS,CAAC,EAAEJ,MAAM5B,QAAQoC,kBAAR,CAA2BC,KAAnC,EAA0ChC,MAAM,EAAhD,EAAoDa,MAAM,SAA1D,EAAD;AAfM,aAAV;AAAA,SAvBC;AAwCVoB,8BAAsB;AAxCZ,KATiD,EAkD5DC,QAAQ;AACPtB,kBAAU;AADH,KAlDoD,EAA3C,CAAxB;AAqDA","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst ens_1 = require(\"../../../common/ens\");\nconst types_1 = require(\"../../../types\");\nexports.ENSNameSchema = Object.assign({}, ens_1.ENSNameBaseSchema, { version: 2, deploymentBlock: 3605331, name: 'ENSName', description: 'Ethereum Name Service Name (EIP 137)', thumbnail: 'https://ens.domains/img/ens.svg', website: 'https://github.com/ethereum/EIPs/blob/master/EIPS/eip-137.md', formatter: async (asset) => {\n        return {\n            thumbnail: 'https://ens.domains/img/ens.svg',\n            title: 'ENS Name ' +\n                (asset.name ? asset.name : asset.nodeHash.slice(0, 4) + '...'),\n            description: 'ENS node ' + asset.nodeHash,\n            url: 'https://etherscan.io/enslookup?q=' + asset.name,\n            properties: [],\n        };\n    }, functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transfer',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0x6090a6e47849629b7245dfa1ca21d94cd15878ef',\n            inputs: [\n                {\n                    kind: types_1.FunctionInputKind.Asset,\n                    name: '_hash',\n                    type: 'bytes32',\n                    value: asset.nodeHash,\n                },\n                {\n                    kind: types_1.FunctionInputKind.Replaceable,\n                    name: 'newOwner',\n                    type: 'address',\n                },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'owner',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0x314159265dD8dbb310642f98f50C066173C1259b',\n            inputs: [\n                {\n                    kind: types_1.FunctionInputKind.Asset,\n                    name: 'node',\n                    type: 'bytes32',\n                    value: asset.nameHash,\n                },\n            ],\n            outputs: [{ kind: types_1.FunctionOutputKind.Owner, name: '', type: 'address' }],\n        }),\n        assetsOfOwnerByIndex: [],\n    }, events: {\n        transfer: [],\n    } });\n//# sourceMappingURL=index.js.map"]}