{"version":3,"sources":["../../../../dist-tsc/schemas/main/CryptoFighters/index.js"],"names":["Object","defineProperty","exports","value","axios_1","require","Web3","types_1","CryptoFightersSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","ID","assetToFields","asset","formatter","default","get","response","data","title","url","properties","image","luck","attr","join","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Replaceable","Asset","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events","Event","anonymous","EventInputKind","Source","indexed","Destination","assetFromInputs","tokenId","hash","a"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst axios_1 = require(\"axios\");\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.CryptoFightersSchema = {\n    version: 2,\n    deploymentBlock: 4952230,\n    name: 'CryptoFighters',\n    description: 'Collect, train, and fight: digital fighters on the blockchain.',\n    thumbnail: 'https://s3.amazonaws.com/cryptofighters/images/455fde9f-9810-4e70-bda6-8bb5cf7a6fe7.png',\n    website: 'https://cryptofighters.io/',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'CryptoFighter number.' },\n    ],\n    assetFromFields: (fields) => fields.ID,\n    assetToFields: asset => ({ ID: asset }),\n    formatter: async (asset) => {\n        const response = await axios_1.default.get(`https://api.cryptofighters.io/fighters/${asset}`);\n        const data = response.data;\n        if (data === null) {\n            return {\n                thumbnail: 'https://s3.amazonaws.com/cryptofighters/images/455fde9f-9810-4e70-bda6-8bb5cf7a6fe7.png',\n                title: 'CryptoFighter #' + asset,\n                description: '',\n                url: 'https://cryptofighters.io/fighter/' + asset,\n                properties: [],\n            };\n        }\n        else {\n            return {\n                thumbnail: data.image,\n                title: 'CryptoFighter #' + asset,\n                description: 'Luck: ' + data.luck + ', genes: ' + data.attr.join(', '),\n                url: 'https://cryptofighters.io/fighter/' + asset,\n                properties: [],\n            };\n        }\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transfer',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0x87d598064c736dd0c712d329afcfaa0ccc1921a1',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0x87d598064c736dd0c712d329afcfaa0ccc1921a1',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'Transfer',\n                target: '0x87d598064c736dd0c712d329afcfaa0ccc1921a1',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: true, name: 'from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: true, name: 'to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: true, name: 'tokenId', type: 'uint256' },\n                ],\n                assetFromInputs: async (inputs) => inputs.tokenId,\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]}