{"version":3,"sources":["../../../../dist-tsc/schemas/main/CryptoPunks/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","types_1","CryptoPunksSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","ID","assetToFields","asset","formatter","title","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Replaceable","Asset","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events","Event","anonymous","EventInputKind","Source","indexed","Destination","assetFromInputs","punkIndex","hash","a"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.CryptoPunksSchema = {\n    version: 1,\n    deploymentBlock: 3914495,\n    name: 'CryptoPunks',\n    description: '10,000 unique collectible characters with proof of ownership stored on the Ethereum blockchain.',\n    thumbnail: 'https://www.larvalabs.com/cryptopunks/cryptopunk2838.png',\n    website: 'https://www.larvalabs.com/cryptopunks',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'CryptoPunk number.' },\n    ],\n    assetFromFields: (fields) => fields.ID,\n    assetToFields: asset => ({ ID: asset }),\n    formatter: async (asset) => {\n        return {\n            thumbnail: 'https://www.larvalabs.com/cryptopunks/cryptopunk' + asset + '.png',\n            title: 'CryptoPunk #' + asset,\n            description: '',\n            url: 'https://www.larvalabs.com/cryptopunks/details/' + asset,\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transferPunk',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: 'to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: 'punkIndex', type: 'uint256', value: asset },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'punkIndexToAddress',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '', type: 'uint256', value: asset },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: '', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'PunkTransfer',\n                target: '0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: true, name: 'from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: true, name: 'to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: false, name: 'punkIndex', type: 'uint256' },\n                ],\n                assetFromInputs: async (inputs) => inputs.punkIndex,\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]}