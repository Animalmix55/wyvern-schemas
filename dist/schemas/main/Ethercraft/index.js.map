{"version":3,"sources":["../../../../dist-tsc/schemas/main/Ethercraft/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","types_1","AddressMap","ItemDB","Images","map","x","address","toLowerCase","addr","dataOf","asset","filter","nameOf","strings","name","indexOf","v","i","imageOf","index","descriptionOf","data","description","unit","kinds","addressByKind","EthercraftSchema","version","deploymentBlock","thumbnail","website","fields","type","values","assetFromFields","Kind","assetToFields","allAssets","formatter","title","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Replaceable","Asset","outputs","countOf","View","Owner","FunctionOutputKind","Count","assetFromOutputs","balance","assetsOfOwnerByIndex","events","hash","a"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nconst AddressMap = require(\"./addressMap.json\");\nconst ItemDB = require(\"./ethercraft.json\");\nconst Images = require(\"./images.json\");\nItemDB.map((x) => {\n    x.address = x.address.toLowerCase();\n    const addr = AddressMap[x.address];\n    if (addr) {\n        x.address = addr;\n    }\n});\nconst dataOf = (asset) => ItemDB.filter((x) => x.address.toLowerCase() === asset.toLowerCase())[0];\nconst nameOf = (asset) => dataOf(asset).strings[0].name;\nconst indexOf = (asset) => ItemDB.map((v, i) => i).filter((i) => ItemDB[i].address.toLowerCase() === asset.toLowerCase())[0];\nconst imageOf = (asset) => {\n    const index = indexOf(asset);\n    return Images[index];\n};\nconst descriptionOf = (asset) => {\n    const data = dataOf(asset);\n    return data.strings[0].description;\n};\nconst unit = '1000000000000000000'; // 10e18\nconst kinds = ItemDB.map((x) => x.strings[0].name);\nconst addressByKind = (name) => ItemDB.filter((x) => x.strings[0].name === name)[0].address;\nexports.EthercraftSchema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'Ethercraft',\n    description: 'A decentralized RPG running on the Ethereum blockchain.',\n    thumbnail: 'https://cdn.discordapp.com/icons/400700363402903552/4f9c2076b2b8a9c0b8a57ce3ecdc57fe.png',\n    website: 'https://ethercraft.io',\n    fields: [\n        { name: 'Kind', type: 'enum', values: kinds, description: 'Kind of item.' },\n    ],\n    assetFromFields: (fields) => addressByKind(fields.Kind),\n    assetToFields: asset => ({ Kind: nameOf(asset) }),\n    allAssets: () => ItemDB.map((x) => x.address),\n    formatter: async (asset) => {\n        return {\n            thumbnail: imageOf(asset),\n            title: 'Ethercraft - ' + nameOf(asset),\n            description: descriptionOf(asset),\n            url: 'https://ethercraft.io/#/shop/' + indexOf(asset),\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transfer',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: 'to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: 'tokens', type: 'uint256', value: unit },\n            ],\n            outputs: [],\n        }),\n        countOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'balanceOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: asset,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: 'tokenOwner', type: 'address' },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Count, name: 'balance', type: 'uint' },\n            ],\n            assetFromOutputs: (outputs) => outputs.balance,\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]}