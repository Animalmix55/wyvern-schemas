{"version":3,"sources":["../../../../dist-tsc/schemas/main/CryptoMemes/index.js"],"names":["Object","defineProperty","exports","value","axios_1","require","Web3","types_1","CryptoMemesSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","ID","assetToFields","asset","formatter","default","get","response","data","image_url","title","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Replaceable","Asset","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events","Event","anonymous","EventInputKind","Source","indexed","Destination","assetFromInputs","tokenId","hash","a"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst axios_1 = require(\"axios\");\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.CryptoMemesSchema = {\n    version: 2,\n    deploymentBlock: 5121073,\n    name: 'CryptoMemes',\n    description: 'Buy memes on the blockchain.',\n    thumbnail: 'https://pbs.twimg.com/profile_images/966538539667042304/H57YxbG-_400x400.jpg',\n    website: 'https://cryptomemes.lol/',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'CryptoMeme number.' },\n    ],\n    assetFromFields: (fields) => fields.ID,\n    assetToFields: asset => ({ ID: asset }),\n    formatter: async (asset) => {\n        const response = await axios_1.default.get(`https://cryptomemes.lol/api/meme/${asset}`);\n        const data = response.data[0];\n        return {\n            thumbnail: data.image_url,\n            title: 'CryptoMeme #' + asset + ' - ' + data.name,\n            description: data.description,\n            url: 'https://cryptomemes.lol/meme/' + asset,\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transfer',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0x0d623823d2aa4540f335bb926447dc582dc5bd64',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0x0d623823d2aa4540f335bb926447dc582dc5bd64',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'Transfer',\n                target: '0x0d623823d2aa4540f335bb926447dc582dc5bd64',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: false, name: 'from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: false, name: 'to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: false, name: 'tokenId', type: 'uint256' },\n                ],\n                assetFromInputs: async (inputs) => inputs.tokenId,\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]}