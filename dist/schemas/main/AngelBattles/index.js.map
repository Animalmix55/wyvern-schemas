{"version":3,"sources":["../../../../dist-tsc/schemas/main/AngelBattles/index.js"],"names":["Object","defineProperty","exports","value","axios_1","require","typed_promisify_1","Web3","types_1","Kind","targets","Angel","Pet","Accessory","dataTargets","transferNames","assetNames","assetTypes","AngelBattlesSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","values","assetFromFields","id","ID","kind","assetToFields","asset","formatter","web3","default","get","imageResponse","imagesSvg","data","getAngelABI","contract","eth","at","promisify","getAngel","call","res","angelId","angelCardSeriesId","toString","battlePower","aura","experience","price","owner","angelThumbnail","angelName","angelMatching","filter","x","cardSeriesType","cardSeriesId","imageUri","cardName","title","url","properties","getPetABI","petContract","getPet","petRes","petId","petCardSeriesId","luck","auraRed","auraBlue","auraYellow","petOwner","petThumbnail","petName","petMatching","getAccessoryABI","accessoryContract","getAccessory","accessoryRes","accessoryId","accessorySeriesId","accessoryOwner","accessoryThumbnail","accessoryName","accessoryMatching","allAssets","getTotalAngelsABI","getTotalAngelsContract","getTotalPetsABI","getTotalPetsContract","getTotalAccessoriesABI","getTotalAccessoriesContract","getTotalAngels","totalAngels","getTotalPets","totalPets","getTotalAccessories","totalAccessories","i","push","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","FunctionInputKind","Replaceable","Asset","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","map","Index","assetFromOutputs","output","str","events","hash","a"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst axios_1 = require(\"axios\");\nconst typed_promisify_1 = require(\"typed-promisify\");\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nvar Kind;\n(function (Kind) {\n    Kind[\"Angel\"] = \"Angel\";\n    Kind[\"Pet\"] = \"Pet\";\n    Kind[\"Accessory\"] = \"Accessory\";\n})(Kind = exports.Kind || (exports.Kind = {}));\nconst targets = {\n    [Kind.Angel]: '0x0c47E8028D5452fcc1aD577B3212C1E63DE72b50',\n    [Kind.Pet]: '0x5ee9bc8a2b2baa393706ba3f3268135663a626a1',\n    [Kind.Accessory]: '0x11b4591dc55d0fb44ce2ab7abe5536ab6e19cf78',\n};\nconst dataTargets = {\n    [Kind.Angel]: '0x6d2e76213615925c5fc436565b5ee788ee0e86dc',\n    [Kind.Pet]: '0xB340686da996b8B3d486b4D27E38E38500A9E926',\n    [Kind.Accessory]: '0x466c44812835f57b736ef9f63582b8a6693a14d0',\n};\nconst transferNames = {\n    [Kind.Angel]: 'ownerAngelTransfer',\n    [Kind.Pet]: 'transfer',\n    [Kind.Accessory]: 'ownerAccessoryTransfer',\n};\nconst assetNames = {\n    [Kind.Angel]: '_angelId',\n    [Kind.Pet]: '_petId',\n    [Kind.Accessory]: '__accessoryId',\n};\nconst assetTypes = {\n    [Kind.Angel]: 'uint64',\n    [Kind.Pet]: 'uint256',\n    [Kind.Accessory]: 'uint64',\n};\n// @ts-ignore\nexports.AngelBattlesSchema = {\n    version: 6,\n    deploymentBlock: 0,\n    name: 'AngelBattles',\n    description: 'Collect angel, pet, and accessory cards',\n    thumbnail: 'https://www.angelbattles.com/images/Site/Logo.png',\n    website: 'https://www.angelbattles.com/',\n    fields: [\n        { name: 'Kind', type: 'enum', values: ['Angel', 'Pet', 'Accessory'], description: 'Kind of AngelBattles asset.' },\n        { name: 'ID', type: 'uint', description: 'Angel ID.' },\n    ],\n    assetFromFields: (fields) => ({ id: fields.ID, kind: fields.Kind }),\n    assetToFields: asset => ({ ID: asset.id, Kind: asset.kind }),\n    formatter: async (asset, web3) => {\n        const imageResponse = await axios_1.default.get('https://www.angelbattles.com/api/imagesSvg');\n        const imagesSvg = imageResponse.data;\n        switch (asset.kind) {\n            case Kind.Angel:\n                const getAngelABI = { 'constant': true, 'inputs': [{ 'name': '_angelId', 'type': 'uint64' }], 'name': 'getAngel', 'outputs': [{ 'name': 'angelId', 'type': 'uint64' }, { 'name': 'angelCardSeriesId', 'type': 'uint8' }, { 'name': 'battlePower', 'type': 'uint16' }, { 'name': 'aura', 'type': 'uint8' }, { 'name': 'experience', 'type': 'uint16' }, { 'name': 'price', 'type': 'uint256' }, { 'name': 'owner', 'type': 'address' }], 'payable': false, 'stateMutability': 'view', 'type': 'function' };\n                const contract = web3.eth.contract([getAngelABI]).at(targets[Kind.Angel]);\n                const res = await typed_promisify_1.promisify(contract.getAngel.call)(asset.id);\n                const angelId = res[0];\n                const angelCardSeriesId = res[1].toString();\n                const battlePower = res[2];\n                const aura = res[3];\n                const experience = res[4];\n                const price = res[5];\n                const owner = res[6];\n                let angelThumbnail = 'https://www.angelbattles.com/images/Site/Logo.png';\n                let angelName = angelCardSeriesId;\n                const angelMatching = imagesSvg.filter((x) => x.cardSeriesType === 'Angel' && x.cardSeriesId === angelCardSeriesId)[0];\n                if (angelMatching) {\n                    angelThumbnail = 'https://' + angelMatching.imageUri;\n                    angelName = angelMatching.cardName;\n                }\n                return {\n                    thumbnail: angelThumbnail,\n                    title: 'Angel #' + angelId + ' - ' + angelName,\n                    description: 'Battle power: ' + battlePower + ', aura: ' + aura + ', experience: ' + experience,\n                    url: 'https://www.angelbattles.com/getcard?type=angel&seriesid=' + angelCardSeriesId,\n                    properties: [],\n                };\n            case Kind.Pet:\n                const getPetABI = { \"constant\": true, \"inputs\": [{ \"name\": \"_petId\", \"type\": \"uint256\" }], \"name\": \"getPet\", \"outputs\": [{ \"name\": \"petId\", \"type\": \"uint256\" }, { \"name\": \"petCardSeriesId\", \"type\": \"uint8\" }, { \"name\": \"luck\", \"type\": \"uint8\" }, { \"name\": \"auraRed\", \"type\": \"uint16\" }, { \"name\": \"auraBlue\", \"type\": \"uint16\" }, { \"name\": \"auraYellow\", \"type\": \"uint16\" }, { \"name\": \"owner\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" };\n                const petContract = web3.eth.contract([getPetABI]).at(targets[Kind.Pet]);\n                const petRes = await typed_promisify_1.promisify(petContract.getPet.call)(asset.id);\n                const petId = petRes[0];\n                const petCardSeriesId = petRes[1].toString();\n                const luck = petRes[2];\n                const auraRed = petRes[3];\n                const auraBlue = petRes[4];\n                const auraYellow = petRes[5];\n                const petOwner = petRes[6];\n                let petThumbnail = 'https://www.angelbattles.com/images/Site/Logo.png';\n                let petName = petCardSeriesId;\n                const petMatching = imagesSvg.filter((x) => x.cardSeriesType === 'Pet' && x.cardSeriesId === petCardSeriesId)[0];\n                if (petMatching) {\n                    petThumbnail = 'https://' + petMatching.imageUri;\n                    petName = petMatching.cardName;\n                }\n                return {\n                    thumbnail: petThumbnail,\n                    title: 'Pet #' + petId + ' - ' + petName,\n                    description: 'Luck: ' + luck + ', aura red: ' + auraRed + ', aura blue: ' + auraBlue + ', aura yellow: ' + auraYellow,\n                    url: 'https://www.angelbattles.com/getcard?type=pet&seriesid=' + petCardSeriesId,\n                    properties: [],\n                };\n            case Kind.Accessory:\n                const getAccessoryABI = { \"constant\": true, \"inputs\": [{ \"name\": \"_accessoryId\", \"type\": \"uint256\" }], \"name\": \"getAccessory\", \"outputs\": [{ \"name\": \"accessoryID\", \"type\": \"uint256\" }, { \"name\": \"AccessorySeriesID\", \"type\": \"uint8\" }, { \"name\": \"owner\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" };\n                const accessoryContract = web3.eth.contract([getAccessoryABI]).at(targets[Kind.Accessory]);\n                const accessoryRes = await typed_promisify_1.promisify(accessoryContract.getAccessory.call)(asset.id);\n                const accessoryId = accessoryRes[0];\n                const accessorySeriesId = accessoryRes[1].toString();\n                const accessoryOwner = accessoryRes[2];\n                let accessoryThumbnail = 'https://www.angelbattles.com/images/Site/Logo.png';\n                let accessoryName = accessorySeriesId;\n                const accessoryMatching = imagesSvg.filter((x) => x.cardSeriesType === 'Accessory' && x.cardSeriesId === accessorySeriesId)[0];\n                if (accessoryMatching) {\n                    accessoryThumbnail = 'https://' + accessoryMatching.imageUri;\n                    accessoryName = accessoryMatching.cardName;\n                }\n                return {\n                    thumbnail: accessoryThumbnail,\n                    title: 'Accessory #' + accessoryId + ' - ' + accessoryName,\n                    description: '',\n                    url: 'https://www.angelbattles.com/getcard?type=acc&seriesid=' + accessorySeriesId,\n                    properties: [],\n                };\n        }\n    },\n    allAssets: async (web3) => {\n        const getTotalAngelsABI = { \"constant\": true, \"inputs\": [], \"name\": \"getTotalAngels\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint64\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" };\n        const getTotalAngelsContract = web3.eth.contract([getTotalAngelsABI]).at(dataTargets[Kind.Angel]);\n        const getTotalPetsABI = { \"constant\": true, \"inputs\": [], \"name\": \"getTotalPets\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint64\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" };\n        const getTotalPetsContract = web3.eth.contract([getTotalPetsABI]).at(dataTargets[Kind.Pet]);\n        const getTotalAccessoriesABI = { \"constant\": true, \"inputs\": [], \"name\": \"getTotalAccessories\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint64\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" };\n        const getTotalAccessoriesContract = web3.eth.contract([getTotalAccessoriesABI]).at(dataTargets[Kind.Accessory]);\n        const totalAngels = await typed_promisify_1.promisify(getTotalAngelsContract.getTotalAngels.call)();\n        const totalPets = await typed_promisify_1.promisify(getTotalPetsContract.getTotalPets.call)();\n        const totalAccessories = await typed_promisify_1.promisify(getTotalAccessoriesContract.getTotalAccessories.call)();\n        const res = [];\n        for (let i = 0; i < totalAngels; i++) {\n            res.push({ kind: Kind.Angel, id: i.toString() });\n        }\n        for (let i = 0; i < totalPets; i++) {\n            res.push({ kind: Kind.Pet, id: i.toString() });\n        }\n        for (let i = 0; i < totalAccessories; i++) {\n            res.push({ kind: Kind.Accessory, id: i.toString() });\n        }\n        return res;\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: transferNames[asset.kind],\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.kind === Kind.Pet ? targets[asset.kind] : dataTargets[asset.kind],\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: assetNames[asset.kind], type: assetTypes[asset.kind], value: asset.id },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: targets[asset.kind],\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset.id },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: '_owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: ([Kind.Angel, Kind.Pet, Kind.Accessory].map(kind => ({\n            type: Web3.AbiType.Function,\n            name: 'getTokenByIndex',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: targets[kind],\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: '_owner', type: 'address' },\n                { kind: types_1.FunctionInputKind.Index, name: 'index', type: 'uint256' },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Asset, name: '', type: 'uint64' },\n            ],\n            assetFromOutputs: (output) => {\n                const str = output.toString();\n                if (str === '0') {\n                    return null;\n                }\n                else {\n                    return { kind, id: str };\n                }\n            },\n        }))),\n    },\n    events: {\n        transfer: [],\n    },\n    hash: a => a.kind + ':' + a.id,\n};\n//# sourceMappingURL=index.js.map"]}