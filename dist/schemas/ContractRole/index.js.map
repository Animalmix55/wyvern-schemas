{"version":3,"sources":["../../../dist-tsc/schemas/ContractRole/index.js"],"names":["Object","defineProperty","exports","value","Web3","require","types_1","ContractRoleSchema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","Name","address","Address","Description","roleGetter","RoleGetter","roleSetter","RoleSetter","formatter","asset","title","url","properties","functions","transfer","AbiType","Function","payable","constant","stateMutability","StateMutability","Nonpayable","target","inputs","kind","FunctionInputKind","Replaceable","outputs","ownerOf","View","FunctionOutputKind","Owner","assetsOfOwnerByIndex","events","hash","a"],"mappings":"AAAA;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,aAAR,CAAhB;AACAH,QAAQK,kBAAR,GAA6B;AACzBC,aAAS,CADgB;AAEzBC,qBAAiB,CAFQ;AAGzBC,UAAM,cAHmB;AAIzBC,iBAAa,yCAJY;AAKzBC,eAAW,oHALc;AAMzBC,aAAS,+FANgB;AAOzBC,YAAQ,CACJ,EAAEJ,MAAM,MAAR,EAAgBK,MAAM,QAAtB,EAAgCJ,aAAa,eAA7C,EADI,EAEJ,EAAED,MAAM,aAAR,EAAuBK,MAAM,QAA7B,EAAuCJ,aAAa,sBAApD,EAFI,EAGJ,EAAED,MAAM,SAAR,EAAmBK,MAAM,SAAzB,EAAoCJ,aAAa,kBAAjD,EAHI,EAIJ,EAAED,MAAM,YAAR,EAAsBK,MAAM,QAA5B,EAAsCJ,aAAa,gEAAnD,EAJI,EAKJ,EAAED,MAAM,YAAR,EAAsBK,MAAM,QAA5B,EAAsCJ,aAAa,4EAAnD,EALI,CAPiB;AAczBK,qBAAiB,yBAACF,MAAD;AAAA,eAAa;AAC1BJ,kBAAMI,OAAOG,IADa;AAE1BC,qBAASJ,OAAOK,OAFU;AAG1BR,yBAAaG,OAAOM,WAHM;AAI1BC,wBAAYP,OAAOQ,UAJO;AAK1BC,wBAAYT,OAAOU;AALO,SAAb;AAAA,KAdQ;AAqBzBC;AAAA,4FAAW,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6DACA;AACHd,2CAAW,oHADR;AAEHe,iEAA+BD,MAAML,UAArC,aAAuDK,MAAMhB,IAF1D;AAGHC,6CAAae,MAAMf,WAAN,IAAyBe,MAAML,UAA/B,+BAAmEK,MAAMR,OAHnF;AAIHU,qCAAK,kCAAkCF,MAAMR,OAJ1C;AAKHW,4CAAY;AALT,6BADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA,OArByB;AA8BzBC,eAAW;AACPC,kBAAU;AAAA,mBAAU;AAChBhB,sBAAMX,KAAK4B,OAAL,CAAaC,QADH;AAEhBvB,sBAAMgB,MAAMH,UAFI;AAGhBW,yBAAS,KAHO;AAIhBC,0BAAU,KAJM;AAKhBC,iCAAiB9B,QAAQ+B,eAAR,CAAwBC,UALzB;AAMhBC,wBAAQb,MAAMR,OANE;AAOhBsB,wBAAQ,CACJ,EAAEC,MAAMnC,QAAQoC,iBAAR,CAA0BC,WAAlC,EAA+CjC,MAAM,UAArD,EAAiEK,MAAM,SAAvE,EADI,CAPQ;AAUhB6B,yBAAS;AAVO,aAAV;AAAA,SADH;AAaPC,iBAAS;AAAA,mBAAU;AACf9B,sBAAMX,KAAK4B,OAAL,CAAaC,QADJ;AAEfvB,sBAAMgB,MAAML,UAFG;AAGfa,yBAAS,KAHM;AAIfC,0BAAU,IAJK;AAKfC,iCAAiB9B,QAAQ+B,eAAR,CAAwBS,IAL1B;AAMfP,wBAAQb,MAAMR,OANC;AAOfsB,wBAAQ,EAPO;AAQfI,yBAAS,CACL,EAAEH,MAAMnC,QAAQyC,kBAAR,CAA2BC,KAAnC,EAA0CtC,MAAM,OAAhD,EAAyDK,MAAM,SAA/D,EADK;AARM,aAAV;AAAA,SAbF;AAyBPkC,8BAAsB;AAzBf,KA9Bc;AAyDzBC,YAAQ;AACJnB,kBAAU;AADN,KAzDiB;AA4DzBoB,UAAM;AAAA,eAAKC,EAAElC,OAAP;AAAA;AA5DmB,CAA7B;AA8DA","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../types\");\nexports.ContractRoleSchema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'ContractRole',\n    description: 'Transferrable role on a smart contract.',\n    thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n    website: 'https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Ownable.sol',\n    fields: [\n        { name: 'Name', type: 'string', description: 'Contract Name' },\n        { name: 'Description', type: 'string', description: 'Contract Description' },\n        { name: 'Address', type: 'address', description: 'Contract Address' },\n        { name: 'RoleGetter', type: 'string', description: 'Name of method to get value of role. Should take no arguments.' },\n        { name: 'RoleSetter', type: 'string', description: 'Name of method to set value of role. Should take one argument, an address.' },\n    ],\n    assetFromFields: (fields) => ({\n        name: fields.Name,\n        address: fields.Address,\n        description: fields.Description,\n        roleGetter: fields.RoleGetter,\n        roleSetter: fields.RoleSetter,\n    }),\n    formatter: async (asset) => {\n        return {\n            thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n            title: `Smart Contract Role: ${asset.roleGetter} for ${asset.name}`,\n            description: asset.description || (`${asset.roleGetter} for smart contract at ${asset.address}`),\n            url: 'https://etherscan.io/address/' + asset.address,\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: asset.roleSetter,\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: 'newOwner', type: 'address' },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: asset.roleGetter,\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: asset.address,\n            inputs: [],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: a => a.address,\n};\n//# sourceMappingURL=index.js.map"]}