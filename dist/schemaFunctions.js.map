{"version":3,"sources":["../dist-tsc/schemaFunctions.js"],"names":["Object","defineProperty","exports","value","ethABI","require","wyvern_js_1","types_1","failWith","msg","Error","encodeReplacementPattern","WyvernProtocol","encodeCall","abi","parameters","inputTypes","inputs","map","i","type","Buffer","concat","methodID","name","rawEncode","toString","encodeSell","schema","asset","address","transfer","getTransferFunction","target","calldata","encodeDefaultCall","replacementPattern","encodeBuy","replaceables","filter","kind","FunctionInputKind","Replaceable","ownerInputs","Owner","length","input","generateDefaultValue","Asset","functions","transferFrom"],"mappings":"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","file":"schemaFunctions.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethABI = require(\"ethereumjs-abi\");\nconst wyvern_js_1 = require(\"wyvern-js\");\nconst types_1 = require(\"./types\");\nconst failWith = (msg) => {\n    throw new Error(msg);\n};\nexports.encodeReplacementPattern = wyvern_js_1.WyvernProtocol.encodeReplacementPattern;\nexports.encodeCall = (abi, parameters) => {\n    const inputTypes = abi.inputs.map(i => i.type);\n    return '0x' + Buffer.concat([\n        ethABI.methodID(abi.name, inputTypes),\n        ethABI.rawEncode(inputTypes, parameters),\n    ]).toString('hex');\n};\nexports.encodeSell = (schema, asset, address) => {\n    const transfer = getTransferFunction(schema)(asset);\n    return {\n        target: transfer.target,\n        calldata: exports.encodeDefaultCall(transfer, address),\n        replacementPattern: exports.encodeReplacementPattern(transfer),\n    };\n};\nexports.encodeBuy = (schema, asset, address) => {\n    const transfer = getTransferFunction(schema)(asset);\n    const replaceables = transfer.inputs.filter((i) => i.kind === types_1.FunctionInputKind.Replaceable);\n    const ownerInputs = transfer.inputs.filter((i) => i.kind === types_1.FunctionInputKind.Owner);\n    // Validate\n    if (replaceables.length !== 1) {\n        failWith('Only 1 input can match transfer destination, but instead ' + replaceables.length + ' did');\n    }\n    // Compute calldata\n    const parameters = transfer.inputs.map((input) => {\n        switch (input.kind) {\n            case types_1.FunctionInputKind.Replaceable:\n                return address;\n            case types_1.FunctionInputKind.Owner:\n                return wyvern_js_1.WyvernProtocol.generateDefaultValue(input.type);\n            default:\n                return input.value.toString();\n        }\n    });\n    const calldata = exports.encodeCall(transfer, parameters);\n    // Compute replacement pattern\n    let replacementPattern = '0x';\n    if (ownerInputs.length > 0) {\n        replacementPattern = exports.encodeReplacementPattern(transfer, types_1.FunctionInputKind.Owner);\n    }\n    return {\n        target: transfer.target,\n        calldata,\n        replacementPattern,\n    };\n};\nexports.encodeDefaultCall = (abi, address) => {\n    const parameters = abi.inputs.map(input => {\n        switch (input.kind) {\n            case types_1.FunctionInputKind.Asset:\n                return input.value;\n            case types_1.FunctionInputKind.Replaceable:\n                return wyvern_js_1.WyvernProtocol.generateDefaultValue(input.type);\n            case types_1.FunctionInputKind.Owner:\n                return address;\n        }\n    });\n    return exports.encodeCall(abi, parameters);\n};\nfunction getTransferFunction(schema) {\n    return schema.functions.transferFrom\n        || schema.functions.transfer;\n}\n//# sourceMappingURL=schemaFunctions.js.map"]}