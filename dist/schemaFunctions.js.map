{"version":3,"sources":["../dist-tsc/schemaFunctions.js"],"names":["Object","defineProperty","exports","value","ethABI","require","wyvern_js_1","bignumber_js_1","types_1","failWith","msg","Error","encodeReplacementPattern","WyvernProtocol","encodeCall","abi","parameters","inputTypes","inputs","map","i","type","Buffer","concat","methodID","name","rawEncode","toString","encodeSell","schema","asset","address","transfer","getTransferFunction","target","calldata","encodeDefaultCall","replacementPattern","encodeAtomicizedSell","assets","atomicizer","transactions","default","atomicizedCalldata","atomicize","getABIEncodedTransactionData","t","length","reduce","x","y","slice","atomicizedReplacementPattern","encodeAtomicizedReplacementPattern","encodeBuy","replaceables","filter","kind","FunctionInputKind","Replaceable","ownerInputs","Owner","input","generateDefaultValue","Asset","functions","transferFrom"],"mappings":"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","file":"schemaFunctions.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethABI = require(\"ethereumjs-abi\");\nconst wyvern_js_1 = require(\"wyvern-js\");\nconst bignumber_js_1 = require(\"wyvern-js/node_modules/bignumber.js\");\nconst types_1 = require(\"./types\");\nconst failWith = (msg) => {\n    throw new Error(msg);\n};\nexports.encodeReplacementPattern = wyvern_js_1.WyvernProtocol.encodeReplacementPattern;\nexports.encodeCall = (abi, parameters) => {\n    const inputTypes = abi.inputs.map(i => i.type);\n    return '0x' + Buffer.concat([\n        ethABI.methodID(abi.name, inputTypes),\n        ethABI.rawEncode(inputTypes, parameters),\n    ]).toString('hex');\n};\nexports.encodeSell = (schema, asset, address) => {\n    const transfer = getTransferFunction(schema)(asset);\n    return {\n        target: transfer.target,\n        calldata: exports.encodeDefaultCall(transfer, address),\n        replacementPattern: exports.encodeReplacementPattern(transfer),\n    };\n};\nexports.encodeAtomicizedSell = (schema, assets, address, atomicizer) => {\n    const transactions = assets.map(asset => {\n        const { target, calldata } = exports.encodeSell(schema, asset, address);\n        return {\n            calldata,\n            abi: getTransferFunction(schema)(asset),\n            address: target,\n            value: new bignumber_js_1.default(0),\n        };\n    });\n    const atomicizedCalldata = atomicizer.atomicize.getABIEncodedTransactionData(transactions.map(t => t.address), transactions.map(t => t.value), transactions.map(t => new bignumber_js_1.default((t.calldata.length - 2) / 2)), // subtract 2 for '0x', divide by 2 for hex\n    transactions.map(t => t.calldata).reduce((x, y) => x + y.slice(2)));\n    const atomicizedReplacementPattern = wyvern_js_1.WyvernProtocol.encodeAtomicizedReplacementPattern(transactions.map(t => t.abi));\n    return {\n        calldata: atomicizedCalldata,\n        replacementPattern: atomicizedReplacementPattern,\n    };\n};\nexports.encodeBuy = (schema, asset, address) => {\n    const transfer = getTransferFunction(schema)(asset);\n    const replaceables = transfer.inputs.filter((i) => i.kind === types_1.FunctionInputKind.Replaceable);\n    const ownerInputs = transfer.inputs.filter((i) => i.kind === types_1.FunctionInputKind.Owner);\n    // Validate\n    if (replaceables.length !== 1) {\n        failWith('Only 1 input can match transfer destination, but instead ' + replaceables.length + ' did');\n    }\n    // Compute calldata\n    const parameters = transfer.inputs.map((input) => {\n        switch (input.kind) {\n            case types_1.FunctionInputKind.Replaceable:\n                return address;\n            case types_1.FunctionInputKind.Owner:\n                return wyvern_js_1.WyvernProtocol.generateDefaultValue(input.type);\n            default:\n                return input.value.toString();\n        }\n    });\n    const calldata = exports.encodeCall(transfer, parameters);\n    // Compute replacement pattern\n    let replacementPattern = '0x';\n    if (ownerInputs.length > 0) {\n        replacementPattern = exports.encodeReplacementPattern(transfer, types_1.FunctionInputKind.Owner);\n    }\n    return {\n        target: transfer.target,\n        calldata,\n        replacementPattern,\n    };\n};\nexports.encodeDefaultCall = (abi, address) => {\n    const parameters = abi.inputs.map(input => {\n        switch (input.kind) {\n            case types_1.FunctionInputKind.Asset:\n                return input.value;\n            case types_1.FunctionInputKind.Replaceable:\n                return wyvern_js_1.WyvernProtocol.generateDefaultValue(input.type);\n            case types_1.FunctionInputKind.Owner:\n                return address;\n        }\n    });\n    return exports.encodeCall(abi, parameters);\n};\nfunction getTransferFunction(schema) {\n    return schema.functions.transferFrom\n        || schema.functions.transfer;\n}\n//# sourceMappingURL=schemaFunctions.js.map"]}